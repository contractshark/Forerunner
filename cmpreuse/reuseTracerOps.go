// Copyright (c) 2021 Microsoft Corporation. 
 // Licensed under the GNU General Public License v3.0.

package cmpreuse

var (
	ACCOUNT_NONCE           = ToStringID("Nonce")
	ACCOUNT_BALANCE         = ToStringID("Balance")
	ACCOUNT_EXIST           = ToStringID("Exist")
	ACCOUNT_EMPTY           = ToStringID("Empty")
	ACCOUNT_CODEHASH        = ToStringID("CodeHash")
	ACCOUNT_CODESIZE        = ToStringID("CodeSize")
	ACCOUNT_CODE            = ToStringID("Code")
	ACCOUNT_STATE           = ToStringID("State")
	ACCOUNT_COMMITTED_STATE = ToStringID("CommittedState")
	ACCOUNT_SUICIDE         = ToStringID("Suicide")
	ACCOUNT_LOG             = ToStringID("Log")

	BLOCK_HASH       = ToStringID("BlockHash")
	BLOCK_COINBASE   = ToStringID("Coinbase")
	BLOCK_TIMESTAMP  = ToStringID("Timestamp")
	BLOCK_NUMBER     = ToStringID("BlockNumber")
	BLOCK_DIFFICULTY = ToStringID("Difficulty")
	BLOCK_GASLIMIT   = ToStringID("GasLimit")

	VIRTUAL_GASUSED = ToStringID("GasUsed")
	VIRTUAL_FAILED  = ToStringID("Failed")
)

var (
	OP_LoadBalance        = NewLoadOpDef(fLoad, ACCOUNT_BALANCE)
	OP_LoadNonce          = NewLoadOpDef(fLoad, ACCOUNT_NONCE)
	OP_LoadExist          = NewLoadOpDef(fLoad, ACCOUNT_EXIST)
	OP_LoadEmpty          = NewLoadOpDef(fLoad, ACCOUNT_EMPTY)
	OP_LoadCodeHash       = NewLoadOpDef(fLoad, ACCOUNT_CODEHASH)
	OP_LoadCodeSize       = NewLoadOpDef(fLoad, ACCOUNT_CODESIZE)
	OP_LoadCode           = NewLoadOpDef(fLoad, ACCOUNT_CODE)
	OP_LoadState          = NewLoadOpDef(fLoad, ACCOUNT_STATE)
	OP_LoadCommittedState = NewLoadOpDef(fLoad, ACCOUNT_COMMITTED_STATE)

	OP_StoreBalance  = NewStoreOpDef(fStore, ACCOUNT_BALANCE)
	OP_StoreNonce    = NewStoreOpDef(fStore, ACCOUNT_NONCE)
	OP_StoreCode     = NewStoreOpDef(fStore, ACCOUNT_CODE)
	OP_StoreState    = NewStoreOpDef(fStore, ACCOUNT_STATE)
	OP_StoreSuicide  = NewStoreOpDef(fStore, ACCOUNT_SUICIDE)
	OP_StoreLog      = NewStoreOpDef(fStore, ACCOUNT_LOG)
	OP_StoreEmpty    = NewStoreOpDef(fStore, ACCOUNT_EMPTY)
	OP_StoreExist    = NewStoreOpDef(fStore, ACCOUNT_EXIST)
	OP_StoreCodeHash = NewStoreOpDef(fStore, ACCOUNT_CODEHASH)
	OP_StoreCodeSize = NewStoreOpDef(fStore, ACCOUNT_CODESIZE)
	OP_StoreGasUsed  = NewStoreOpDef(fStore, VIRTUAL_GASUSED)
	OP_StoreFailed   = NewStoreOpDef(fStore, VIRTUAL_FAILED)

	OP_ReadBlockHash   = NewReadOpDef(fRead, BLOCK_HASH)
	OP_ReadCoinbase    = NewReadOpDef(fRead, BLOCK_COINBASE)
	OP_ReadTimestamp   = NewReadOpDef(fRead, BLOCK_TIMESTAMP)
	OP_ReadBlockNumber = NewReadOpDef(fRead, BLOCK_NUMBER)
	OP_ReadDifficulty  = NewReadOpDef(fRead, BLOCK_DIFFICULTY)
	OP_ReadGasLimit    = NewReadOpDef(fRead, BLOCK_GASLIMIT)

	OP_SubBigInt         = NewSimpleOpDef(fSubBigInt)
	OP_AddBigInt         = NewSimpleOpDef(fAddBigInt)
	OP_MulBigInt         = NewSimpleOpDef(fMulBigInt)
	OP_DivBigInt         = NewSimpleOpDef(fDivBigInt)
	OP_CmpBigInt         = NewSimpleOpDef(fCmpBigInt)
	OP_EqualBigInt       = NewSimpleOpDef(fEqualBigInt)
	OP_GEBigInt          = NewSimpleOpDef(fGEBigInt)
	OP_BitLenBigInt      = NewSimpleOpDef(fBitLenBigInt)
	OP_CropBigIntAddress   = NewSimpleOpDef(fCropBigIntAddress)
	OP_ByteArrayToBigInt = NewSimpleOpDef(fByteArrayToBigInt)
	OP_BigIntTo32Bytes   = NewSimpleOpDef(fBigIntTo32Bytes)
	OP_U256BigInt        = NewSimpleOpDef(fU256BigInt)
	OP_S256BigInt        = NewSimpleOpDef(fS256BigInt)
	OP_SignBigInt        = NewSimpleOpDef(fSignBigInt)
	OP_NegBigInt         = NewSimpleOpDef(fNegBigInt)
	OP_AbsBigInt         = NewSimpleOpDef(fAbsBigInt)
	OP_IsUint64BigInt    = NewSimpleOpDef(fIsUint64BigInt)
	OP_LowestByteBigInt  = NewSimpleOpDef(fLowestByteBigInt)

	OP_EVMAdd        = NewSimpleOpDef(fEVMAdd)
	OP_EVMSub        = NewSimpleOpDef(fEVMSub)
	OP_EVMMul        = NewSimpleOpDef(fEVMMul)
	OP_EVMDiv        = NewSimpleOpDef(fEVMDiv)
	OP_EVMSdiv       = NewSimpleOpDef(fEVMSdiv)
	OP_EVMMod        = NewSimpleOpDef(fEVMMod)
	OP_EVMSmod       = NewSimpleOpDef(fEVMSmod)
	OP_EVMExp        = NewSimpleOpDef(fEVMExp)
	OP_EVMSignExtend = NewSimpleOpDef(fEVMSignExtend)
	OP_EVMNot        = NewSimpleOpDef(fEVMNot)
	OP_EVMLt         = NewSimpleOpDef(fEVMLt)
	OP_EVMGt         = NewSimpleOpDef(fEVMGt)
	OP_EVMSlt        = NewSimpleOpDef(fEVMSlt)
	OP_EVMSgt        = NewSimpleOpDef(fEVMSgt)
	OP_EVMEq         = NewSimpleOpDef(fEVMEq)
	OP_EVMIszero     = NewSimpleOpDef(fEVMIszero)
	OP_EVMAnd        = NewSimpleOpDef(fEVMAnd)
	OP_EVMOr         = NewSimpleOpDef(fEVMOr)
	OP_EVMXor        = NewSimpleOpDef(fEVMXor)
	OP_EVMByte       = NewSimpleOpDef(fEVMByte)
	OP_EVMAddmod     = NewSimpleOpDef(fEVMAddmod)
	OP_EVMMulmod     = NewSimpleOpDef(fEVMMulmod)
	OP_EVMSHL        = NewSimpleOpDef(fEVMSHL)
	OP_EVMSHR        = NewSimpleOpDef(fEVMSHR)
	OP_EVMSAR        = NewSimpleOpDef(fEVMSAR)
	OP_IszeroBigInt  = NewSimpleOpDef(fIszeroBigInt)

	OP_LessInt      = NewSimpleOpDef(fLessINT)
	OP_EqualGeneric = NewSimpleOpDef(fEqualGeneric)

	OP_AddUint64 = NewSimpleOpDef(fAddUint64)

	OP_ConcatBytes     = NewSimpleOpDef(fConcatBytes)
	OP_GetDataBig      = NewSimpleOpDef(fGetDataBig)
	OP_LenByteArray    = NewSimpleOpDef(fLenByteArray)
	OP_SliceByteArray  = NewSimpleOpDef(fSliceByteArray)
	OP_Sha3            = NewSimpleOpDef(fSha3)
	OP_CreateAddress   = NewSimpleOpDef(fCreateAddress)
	OP_CreateAddress2  = NewSimpleOpDef(fCreateAddress2)
	OP_RunPrecompiled  = NewSimpleOpDef(fRunPrecompiled)
	OP_IsPrecompiled   = NewSimpleOpDef(fIsPrecompiled)
	OP_ArrayBoundCheck = NewSimpleOpDef(fArrayBoundCheck)

	OP_SetStateValueID = NewSimpleOpDef(fSetStateValueID)
	OP_GetStateValueID = NewSimpleOpDef(fGetStateValueID)

	OP_SetAddrID = NewSimpleOpDef(fSetAddrID)
	OP_GetAddrID = NewSimpleOpDef(fGetAddrID)

	OP_SetBlockHashNumID = NewSimpleOpDef(fSetBlockHashNumID)
	OP_GetBlockHashNumID = NewSimpleOpDef(fGetBlockHashNumID)

	OP_AssignGeneric = NewSimpleOpDef(fAssignGeneric)
	OP_Guard         = NewGuardOpDef(fGuard, "Guard")
	//OP_JumpGuard       = NewGuardOpDef(fGuard, "JumpGuard")
	//OP_CondGuard       = NewGuardOpDef(fGuard, "CondGuard")
	//OP_StoreGasGuard   = NewGuardOpDef(fGuard, "StoreGasGuard")
	//OP_CallTargetGuard = NewGuardOpDef(fGuard, "CallTargetGuard")
	//OP_CodeGuard       = NewGuardOpDef(fGuard, "CodeGuard")
	//OP_MSParamGuard    = NewGuardOpDef(fGuard, "MSParamGuard")
)
